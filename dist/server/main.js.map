{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@angular/router/router.d.ts.ÉµEmptyOutletComponent.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.server.module.ts","webpack:///./src/app/calendar/dayConverter.ts","webpack:///./src/app/city-details/city-details.component.html","webpack:///./src/app/city-details/city-details.component.ts","webpack:///./src/app/home.city/home.city.component.html","webpack:///./src/app/home.city/home.city.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/hour-weather/hour-weather.component.html","webpack:///./src/app/hour-weather/hour-weather.component.ts","webpack:///./src/app/openweathermap/constants/openWeatherMap.ts","webpack:///./src/app/openweathermap/openWeatherProvider.ts","webpack:///./src/app/openweathermap/secrets/api.ts","webpack:///./src/app/openweathermap/utils/helpers.ts","webpack:///./src/app/search/search.component.html","webpack:///./src/app/search/search.component.ts","webpack:///./src/app/splash/splash.component.html","webpack:///./src/app/splash/splash.component.ts","webpack:///./src/app/weather.model.ts","webpack:///./src/app/weather.service.ts","webpack:///./src/main.server.ts","webpack:///external \"@angular/animations\"","webpack:///external \"@angular/animations/browser\"","webpack:///external \"@angular/common\"","webpack:///external \"@angular/common/http\"","webpack:///external \"@angular/core\"","webpack:///external \"@angular/forms\"","webpack:///external \"@angular/http\"","webpack:///external \"@angular/platform-browser\"","webpack:///external \"@angular/platform-browser/animations\"","webpack:///external \"@angular/platform-server\"","webpack:///external \"@angular/router\"","webpack:///external \"@nguniversal/module-map-ngfactory-loader\"","webpack:///external \"rxjs\"","webpack:///external \"rxjs/\"","webpack:///external \"rxjs/operators\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","<router-outlet></router-outlet>","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent }   from './home/home.component';\nimport { CityDetailsComponent } from \"./city-details/city-details.component\";\nimport { SearchComponent } from './search/search.component';\nimport { HourWeatherComponent } from './hour-weather/hour-weather.component';\nimport { SplashComponent } from './splash/splash.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: \"search\", component: SearchComponent, pathMatch: \"full\" },\n  { path: \":city/:day\", component: HourWeatherComponent },\n  { path: \":city\", component: CityDetailsComponent },\n  { path: \"splash\", component: SplashComponent },\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { WeatherService } from './weather.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n    public constructor(private weatherService: WeatherService) {}\n\n    public ngOnInit(): void {\n        this.weatherService.cities$.forEach((cities: string[]) => {\n            cities.forEach(city => {\n                this.weatherService.addCityWeather(city);\n            });\n        });\n    }s\n}\n","import { NgModule }       from '@angular/core';\nimport { BrowserModule }  from '@angular/platform-browser';\nimport { FormsModule }    from '@angular/forms';\nimport { HttpClientModule }    from '@angular/common/http';\n\nimport { AppRoutingModule }     from './app-routing.module';\n\nimport { AppComponent }         from './app.component';\nimport { HomeComponent }        from './home/home.component';\nimport { WeatherService }       from \"./weather.service\";\nimport { OpenWeatherProvider }  from \"./openweathermap/openWeatherProvider\";\n\nimport { PLATFORM_ID, APP_ID, Inject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { HomeCityComponent } from './home.city/home.city.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CityDetailsComponent } from './city-details/city-details.component';\nimport { SplashComponent } from './splash/splash.component';\nimport { HourWeatherComponent } from './hour-weather/hour-weather.component';\nimport { SearchComponent } from './search/search.component';\n\n@NgModule({\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'tour-of-heroes' }),\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule\n    // HttpClientInMemoryWebApiModule.forRoot(\n    //   InMemoryDataService, { dataEncapsulation: false }\n    // )\n  ],\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HomeCityComponent,\n    CityDetailsComponent,\n    SplashComponent,\n    HourWeatherComponent,\n    SearchComponent\n  ],\n  providers: [ WeatherService, OpenWeatherProvider ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(APP_ID) private appId: string) {\n    const platform = isPlatformBrowser(platformId) ?\n      'in the browser' : 'on the server';\n    console.log(`Running ${platform} with appId=${appId}`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\nimport { ModuleMapLoaderModule } from '@nguniversal/module-map-ngfactory-loader';\n\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    AppModule,\n    ServerModule,\n    ModuleMapLoaderModule\n  ],\n  providers: [\n    // Add universal-only providers here\n  ],\n  bootstrap: [ AppComponent ],\n})\nexport class AppServerModule {}\n","const eng_short_day_names = [\n    \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"\n];\n\nconst eng_long_day_names = [\n    \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"\n];\n\nfunction isInRange(num: number) {\n    return num > -1 && num < 7;\n}\n\nfunction convertNumberToDayName(dayNumber: number, day_name: string[]): string {\n    if (isInRange(dayNumber)) {\n        return day_name[dayNumber];\n    }\n\n    throw new Error(\"Number has to be between 0 and 6. Yours is: \" + dayNumber);\n}\n\nexport function convertNumberToShortName(dayNumber: number): string {\n    return convertNumberToDayName(dayNumber, eng_short_day_names);\n}\n\nexport function convertNumberToLongName(dayNumber: number): string {\n    return convertNumberToDayName(dayNumber, eng_long_day_names);\n}","<div @enterLeave class=\"city-details bg-primary text-white\" *ngIf=\"city\">\n    <div class=\"container\">\n        <div class=\"text-center position-relative\">\n            <a class=\"text-white no-text-decoration\" routerLink=\"/\">\n                <i class=\"wi wi-direction-left position-absolute animate-arrow\"></i>\n            </a>\n            <h1>{{city.cityDetails.name}}, <small>{{city.cityDetails.country | uppercase}}</small></h1>\n            <p><i class=\"wi {{city._5DayWeather[0].weather_by_hour[0].icon}}\"></i></p>\n            <p>{{city._5DayWeather[0].weather_by_hour[0].temp}} &deg;</p>\n            <ul class=\"list-inline\">\n                <li class=\"list-inline-item\">\n                    {{city._5DayWeather[0].weather_by_hour[0].temp_min}} &deg;\n                </li>\n                <li class=\"list-inline-item\">\n                    {{city._5DayWeather[0].weather_by_hour[0].temp_max}} &deg;\n                </li>\n            </ul>\n            <ul class=\"list-inline\">\n                <li class=\"list-inline-item\">\n                    <i class=\"wi wi-small-craft-advisory\"></i> {{city._5DayWeather[0].weather_by_hour[0].wind_speed}} m/s\n                </li>\n                <li class=\"list-inline-item\">\n                    <i class=\"wi wi-barometer\"></i> {{city._5DayWeather[0].weather_by_hour[0].pressure}} hpa\n                </li>\n                <li class=\"list-inline-item\">\n                    <i class=\"wi wi-humidity\"></i> {{city._5DayWeather[0].weather_by_hour[0].humidity}} %\n                </li>\n            </ul>\n            <hr class=\"bg-white\"/>\n            <div class=\"row\">\n                <div class=\"col-sm weather-by-day\" *ngFor=\"let day of city._5DayWeather\">\n                    <a routerLink=\"/{{city.cityDetails.name | lowercase}}/{{day.day_short | lowercase}}\">\n                        <p>{{day.day_short}}</p>\n                        <p><i class=\"wi {{day.weather_by_hour[0].icon}}\"></i></p>\n                        <div class=\"list-inline\">\n                            {{day.weather_by_hour[0].temp_max}}/{{day.weather_by_hour[0].temp_min}}\n                        </div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { WeatherService } from '../weather.service';\nimport { ICityModel } from '../weather.model';\nimport { find, filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { enterLeave } from '../animations';\n\n@Component({\n    selector: 'app-city-details',\n    templateUrl: './city-details.component.html',\n    styleUrls: ['./city-details.component.scss'],\n    animations: [ enterLeave ]\n})\nexport class CityDetailsComponent implements OnInit, OnDestroy {\n    public city: ICityModel;\n    private subscription: Subscription;\n\n    constructor(\n        private route: ActivatedRoute,\n        private weatherService: WeatherService\n    ) { }\n\n    ngOnInit() {\n        const cityName = this.route.snapshot.paramMap.get(\"city\");\n        this.subscription = this.weatherService.citiesWeather$\n            .subscribe((cities: Map<string, ICityModel>) => {\n                this.city = cities.get(cityName);\n            });\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n}\n","<div @enterLeave class=\"home-city\">\n    <a routerLink=\"/{{city.cityDetails.name | lowercase}}\">\n        <div class=\"card bg-primary border-0 text-light shadow rounded\">\n            <div class=\"card-body\">\n                <!-- <i class=\"wi wi-refresh\"></i> -->\n                <h5 class=\"card-title text-right\">{{city.cityDetails.name}}, \n                    <small>{{city.cityDetails.country | uppercase}}</small>\n                </h5>\n                <p class=\"card-text text-center\">{{city.currentWeather.weather_main}}</p>\n                <p class=\"card-text text-center\">\n                    <i class=\"wi {{city.currentWeather.icon}}\"></i>\n                </p>\n                <!-- <ul class=\"list-inline\">\n                    <li class=\"list-inline-item\">\n                        <i class=\"wi wi-small-craft-advisory\"></i> {{city.currentWeather.wind_speed}} m/s\n                    </li>\n                    <li class=\"list-inline-item\">\n                        <i class=\"wi wi-barometer\"></i> {{city.currentWeather.pressure}} hpa\n                    </li>\n                    <li class=\"list-inline-item\">\n                        <i class=\"wi wi-humidity\"></i> {{city.currentWeather.humidity}} %\n                    </li>\n                </ul> -->\n                <h1 class=\"card-text home-city-deg\">{{city.currentWeather.temp}} \n                    <span>&#xb0;</span>\n                </h1>\n                </div>\n        </div>\n    </a>\n</div>","import { Component, OnInit, Input, HostListener } from '@angular/core';\nimport { enterLeave } from '../animations';\nimport { ICityModel } from '../weather.model';\n\n@Component({\n    selector: 'app-home-cities',\n    templateUrl: './home.city.component.html',\n    styleUrls: ['./home.city.component.scss'],\n    animations: [ enterLeave ]\n})\nexport class HomeCityComponent implements OnInit {\n    @Input() public city: ICityModel;\n\n    ngOnInit() {\n    }\n\n    public onMouseEnter(event:any) {\n        \n    }\n}\n","<div class=\"home\">\n    <div class=\"container text-center\">\n        <div class=\"logo\">\n            <div class=\"position-relative d-inline-block\">\n                <i class=\"wi wi-cloud\"></i>\n                <strong class=\"position-relative d-block\">SKY WEATHER</strong>\n            </div>\n        </div>\n    </div>\n    <div class=\"container\">\n        <div class=\"row\">\n            <app-home-cities class=\"col-sm-3\" *ngFor=\"let city of cities\"\n            [city]=\"city\">\n            </app-home-cities>  \n            <!-- <div class=\"home-city\">\n                <a routerLink=\"/search\">\n                    <div class=\"card bg-primary border-0 text-light rounded\">\n                        <div class=\"card-body\">\n\n                        </div>\n                    </div>\n                </a>\n            </div>   -->\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { WeatherService } from \"../weather.service\";\nimport { debounceTime } from 'rxjs/operators';\nimport { ICityModel } from '../weather.model';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n    public cities: any[] = [];\n    private subscription: Subscription;\n\n    constructor(private weatherService: WeatherService) { }\n\n    ngOnInit() {\n        this.subscription = this.weatherService.citiesWeather$\n            .subscribe((citiesWeather: Map<string, ICityModel>) => {\n                this.cities = Array.from(citiesWeather.values());\n            });\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n}\n","<div @enterLeave class=\"hour-weather\" *ngIf=\"weatherForTheDay\">\n    <div class=\"container position-relative\">\n        <a class=\"no-text-decoration\" routerLink=\"/{{city.cityDetails.name | lowercase}}\">\n            <i class=\"wi wi-direction-left position-absolute animate-arrow\"></i>\n        </a>\n        <table class=\"table table-borderless\">\n            <thead>\n                <tr>\n                    <th colspan=\"3\">{{weatherForTheDay.weather_by_hour[0].date | date: \"EEEE MMMM dd, yyyy\"}} - {{city.cityDetails.name}} ({{city.cityDetails.country}})</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let weather of weatherForTheDay.weather_by_hour\">\n                    <td class=\"align-middle\">{{weather.date | date: \"HH:mm\"}}</td>\n                    <td class=\"align-middle\"><i class=\"wi {{weather.icon}}\"></i></td>\n                    <td class=\"align-middle\">{{weather.temp}} &deg;</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { WeatherService } from '../weather.service';\nimport { ICityModel } from '../weather.model';\nimport {Â enterLeave } from \"../animations\";\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'app-hour-weather',\n    templateUrl: './hour-weather.component.html',\n    styleUrls: ['./hour-weather.component.scss'],\n    animations: [ enterLeave ]\n})\nexport class HourWeatherComponent implements OnInit, OnDestroy {\n    public city: ICityModel;\n    public day: string;\n    public weatherForTheDay: any | null;\n    private subscription: Subscription;\n\n    constructor(\n        private route: ActivatedRoute,\n        private weatherService: WeatherService\n    ) { }\n\n    ngOnInit() {\n        const cityName = this.route.snapshot.paramMap.get(\"city\");\n        this.day = this.route.snapshot.paramMap.get(\"day\");\n        this.subscription = this.weatherService.citiesWeather$\n            .subscribe((citiesWeather: Map<string, ICityModel>) => {\n                if (citiesWeather.has(cityName)) {\n                    this.city = citiesWeather.get(cityName);\n                    this.weatherForTheDay = this.city._5DayWeather.filter(day => day.day_short.toLowerCase() === this.day)[0];\n                }\n            });\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n}\n","export const OPEN_WEATHER_MAP_API_HOSTNAME = \"http://api.openweathermap.org\";\nexport const OPEN_WEATHER_MAP_5_DAY_API = \"/data/2.5/forecast?\";\nexport const OPEN_WEATHER_MAP_CURRENT_DAY_API = \"/data/2.5/weather?\"","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\nimport { IWeatherProvider } from \"../IWeatherProvider\";\nimport { Observable, of, forkJoin } from \"rxjs/\";\nimport { catchError, map, tap,  } from 'rxjs/operators';\nimport { IWeather5DayModel, IWeatherCurrentDayModel, ICityModel } from \"../weather.model\";\nimport { \n    OPEN_WEATHER_MAP_API_HOSTNAME,\n    OPEN_WEATHER_MAP_5_DAY_API,\n    OPEN_WEATHER_MAP_CURRENT_DAY_API\n} from './constants/openWeatherMap';\nimport { getWeatherIconText } from './utils/helpers';\nimport { OPEN_WEATHER_MAP_API_KEY } from './secrets/api';\nimport { convertNumberToLongName, convertNumberToShortName} from \"../calendar/dayConverter\";\n\n@Injectable()\nexport class OpenWeatherProvider implements IWeatherProvider {\n    private static APPID = \"appid\";\n    private static UNITS = \"units\";\n    private static QUERY = \"q\";\n\n    // private params: HttpParams;\n    private baseUrl: string;\n\n    public constructor(private http: HttpClient) {\n        this.baseUrl = OPEN_WEATHER_MAP_API_HOSTNAME;\n    }\n\n    public getFullWeatherByCityName(cityName: string): Observable<ICityModel> {\n        return forkJoin([\n            this.getCurrentWeatherByCityName(cityName),\n            this.get5DayWeatherByCityName(cityName)\n        ])\n        .pipe<ICityModel>(\n            map(([currentWeather, _5DayWeather]) => {\n                return {\n                    cityDetails: currentWeather.cityDetails,\n                    _5DayWeather: _5DayWeather._5DayWeather,\n                    currentWeather: currentWeather.currentWeather\n                };\n            })\n        )\n    }\n\n    public get5DayWeatherByCityNames(names: string[]): Observable<ICityModel[]> {\n        return forkJoin(names.map(name => this.get5DayWeatherByCityName(name)));\n    }\n\n    public get5DayWeatherByCityName(cityName: string): Observable<ICityModel> {\n        const url = `${this.baseUrl}${OPEN_WEATHER_MAP_5_DAY_API}`;\n        return this.getWeatherByCityName(cityName, url, this.extract5DayWeatherData.bind(this));\n    }    \n    \n    public getCurrentWeatherByCityName(cityName: string): Observable<ICityModel> {\n        const url = `${this.baseUrl}${OPEN_WEATHER_MAP_CURRENT_DAY_API}`;\n        return this.getWeatherByCityName(cityName, url, this.extractCurrentWeatherData.bind(this));\n    }\n\n    public getWeatherByCityName(cityName: string, url: string, extractMethod: any): Observable<any> {\n        const params: HttpParams = this.generateHttpParams(cityName);\n        const observable = this.http.get<any>(url, { responseType: \"json\", params });\n\n        return observable.pipe(\n            map(weather_data => extractMethod(weather_data)),\n            catchError(this.handleError<any>({}))\n        );\n    }\n\n    private handleError<T>(result?: T) {\n        return (error: any): Observable<T> => {\n\n            // TODO: send the error to remote logging infrastructure\n            console.error(error); // log to console instead\n\n            // Let the app keep running by returning an empty result.\n            return of(result as T);\n        };\n    }\n\n    private extract5DayWeatherData(weather_data: any): ICityModel {\n        let data: ICityModel;\n        data = this.fillCityDetails(\n            weather_data.city.name,\n            weather_data.city.country,\n            weather_data.city.coord.lat,\n            weather_data.city.coord.lon\n        );\n\n        const temp: Map<string, number> = new Map();\n        data._5DayWeather = [];\n        for (let i = 0; i < weather_data.list.length; i++) {\n            const weather = weather_data.list[i];\n            const day = new Date(weather.dt_txt).getDay();\n            const day_short: string = convertNumberToShortName(day);\n\n            if (!temp.has(day_short)) {\n                const length = data._5DayWeather.length;\n                temp.set(day_short, length);\n\n                data._5DayWeather.push({\n                    day_short,\n                    day_long: convertNumberToLongName(day),\n                    weather_by_hour: []\n                });  \n            }\n\n            data._5DayWeather[temp.get(day_short)].weather_by_hour\n                .push(this.weatherInfoByDayOrTime(weather.dt_txt, weather));\n        }        \n\n        return data;\n    }\n\n    private extractCurrentWeatherData(weather_data: any) {\n        let data: ICityModel;\n        data = this.fillCityDetails(\n            weather_data.name,\n            weather_data.sys.country,\n            weather_data.coord.lat,\n            weather_data.coord.lon\n        );\n\n        data.currentWeather = this.weatherInfoByDayOrTime( new Date().toString(), weather_data );\n\n        return data;\n    }\n\n    private weatherInfoByDayOrTime(date: string, weather_data: any) {\n        return (\n            {\n                date: date,\n                humidity: weather_data.main.humidity,\n                pressure: weather_data.main.pressure,\n                temp: this.toFixed(weather_data.main.temp),\n                temp_max: this.toFixed(weather_data.main.temp_max),\n                temp_min: this.toFixed(weather_data.main.temp_min),\n                wind_speed: weather_data.wind.speed,\n                weather_description: weather_data.weather[0].description,\n                weather_main: weather_data.weather[0].main,\n                icon: getWeatherIconText(weather_data.weather[0].icon)\n            }\n        );\n    }\n\n    private fillCityDetails(name: string, country: string, lat: number, lon: number): any {\n        return (\n            {\n                cityDetails: {\n                    name,\n                    country,\n                    coord: {\n                        lat,\n                        lon,\n                    }\n                }\n            }\n        );\n    }\n\n    private toFixed(float: number): number{\n        return +Number(float).toFixed(0);\n    }\n\n    private generateHttpParams(cityName: string): HttpParams {\n        let params = new HttpParams();\n        params = params\n            .append(OpenWeatherProvider.APPID, OPEN_WEATHER_MAP_API_KEY)\n            .append(OpenWeatherProvider.UNITS, \"metric\")\n            .append(OpenWeatherProvider.QUERY, cityName);\n\n        return params;\n    }\n\n}","export const OPEN_WEATHER_MAP_API_KEY = \"81cefb126baf52544a885b8247347c82\";","export function generateUrlLink(\n    hostname: string, \n    path: string, \n    queryParams: {[key: string]: string}): string\n{\n    let url = '';\n    url += hostname;\n    url += path;\n\n    const queryParamsKeys = Object.keys(queryParams);\n\n    for (let i = 0; i < queryParamsKeys.length; i++) {\n        const queryParamsKey = queryParamsKeys[i];\n        url += `${queryParamsKey}=${queryParams[queryParamsKey]}`;\n\n        if (i < queryParamsKeys.length - 1) {\n            url += \"&\";\n        }\n    }\n    return url;\n}\n\nconst mapIcons: Map<string, string> = new Map();\nmapIcons.set(\"01d\", \"wi-day-sunny\");\nmapIcons.set(\"01n\", \"wi-night-clear\");\nmapIcons.set(\"02d\", \"wi-day-cloudy\");\nmapIcons.set(\"02n\", \"wi-night-alt-cloudy\");\nmapIcons.set(\"03d\", \"wi-cloud\");\nmapIcons.set(\"03n\", \"wi-cloud\");\nmapIcons.set(\"04d\", \"wi-cloudy\");\nmapIcons.set(\"04n\", \"wi-cloudy\");\nmapIcons.set(\"09d\", \"wi-day-showers\");\nmapIcons.set(\"09n\", \"wi-night-alt-showers\");\nmapIcons.set(\"10d\", \"wi-day-rain\");\nmapIcons.set(\"10n\", \"wi-night-alt-rain\");\nmapIcons.set(\"11d\", \"wi-day-thunderstormn\");\nmapIcons.set(\"11n\", \"wi-night-alt-thunderstorm\");\nmapIcons.set(\"13d\", \"wi-day-snow\");\nmapIcons.set(\"13n\", \"wi-night-alt-snow\");\nmapIcons.set(\"50d\", \"wi-fog\");\nmapIcons.set(\"50n\", \"wi-fog\");\n\nconst mapColors: Map<string, string> = new Map();\n// mapColors.set(\"\")\n\nexport function getWeatherIconText(icon: string): string {\n    if (mapIcons.has(icon)) {\n        return mapIcons.get(icon);\n    }\n\n    return \"wi-cloud\";\n}\n\n// export function defineHomeCardBgColor(icon: string): string {\n\n// }","<p>\n  search works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  splash works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-splash',\n  templateUrl: './splash.component.html',\n  styleUrls: ['./splash.component.css']\n})\nexport class SplashComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","type WeatherDetails = {\n    temp: number;\n    temp_min: number;\n    temp_max: number;\n    pressure: number;\n    wind_speed: number;\n    date?: string;\n    humidity: number;\n    weather_main: string;\n    weather_description: string;\n    icon: string;\n}\n\ntype CityDetails = {\n    name: string;\n    coord?: {\n        lat: number;\n        lon: number;\n    }\n    country?: string\n}\n\ntype Day = {\n    name: string;\n    n0: number;\n}\n\ntype Hour = {\n    hour: number;\n    weather_details: WeatherDetails;\n}\n\ntype _5DayWeather = {\n    day_short: string;\n    day_long: string;\n    weather_by_hour: WeatherDetails[];\n}\n\ninterface WeatherModel {\n    city: CityDetails;\n}\n\nexport interface ICityModel {\n    cityDetails?: CityDetails;\n    currentWeather?: WeatherDetails;\n    _5DayWeather?: _5DayWeather[];\n}\n\nexport interface IWeather5DayModel extends WeatherModel {\n    list: WeatherDetails[];\n}\n\nexport interface IWeatherCurrentDayModel extends WeatherModel {\n    weather_details: WeatherDetails;\n}\n\n// const obj = {\n//     name: \"Zagreb\",\n//     country: \"HR\",\n//     coords: {\n//         lon: 54.3,\n//         lat: 43.2\n//     },\n//     currentWeather: {\n//         temp: 23,\n//         temp_min: 18,\n//         temp_max: 25,\n//         pressure: 1032,\n//         wind_speed: 32,\n//         date: \"2018-10-01 23:00:00\",\n//         humidity: 65,\n//         weather_main: \"Drizzle\",\n//         weather_description: \"light intensity drizzle\",\n//         icon: \"drizzle\"\n//     },\n//     _5DayWeather: [\n//         {\n//             day: \"Mon\",\n//             weather_by_hour: [\n//                 {\n//                     hour: 8,\n//                     temp: 23,\n//                     temp_min: 18,\n//                     temp_max: 25,\n//                     pressure: 1032,\n//                     wind_speed: 32,\n//                     date: \"2018-10-01 23:00:00\",\n//                     humidity: 65,\n//                     weather_main: \"Drizzle\",\n//                     weather_description: \"light intensity drizzle\"\n//                 },\n//                 {\n//                     hour: 11,\n//                     temp: 23,\n//                     temp_min: 18,\n//                     temp_max: 25,\n//                     pressure: 1032,\n//                     wind_speed: 32,\n//                     date: \"2018-10-01 23:00:00\",\n//                     humidity: 65,\n//                     weather_main: \"Drizzle\",\n//                     weather_description: \"light intensity drizzle\"\n//                 }\n//             ]\n//         },\n//         {\n//             day_short: \"Tue\",\n//             day_long: \"Tuesday\",\n//             weather_by_hour: [\n//                 {\n//                     hour: 8,\n//                     temp: 23,\n//                     temp_min: 18,\n//                     temp_max: 25,\n//                     pressure: 1032,\n//                     wind_speed: 32,\n//                     date: \"2018-10-01 23:00:00\",\n//                     humidity: 65,\n//                     weather_main: \"Drizzle\",\n//                     weather_description: \"light intensity drizzle\"\n//                 }\n//             ]\n//         },\n//     ]\n// }","import { Injectable } from '@angular/core';\n\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\nimport { map, scan, publishReplay, refCount } from 'rxjs/operators';\n\nimport {\n    OPEN_WEATHER_MAP_API_HOSTNAME,\n    OPEN_WEATHER_MAP_5_DAY_API,\n    OPEN_WEATHER_MAP_CURRENT_DAY_API\n} from './openweathermap/constants/openWeatherMap';\nimport { ICityModel } from \"./weather.model\";\nimport { OpenWeatherProvider } from \"./openweathermap/openWeatherProvider\";\n\ntype CitiesWeatherOperation = (cities: Map<string, ICityModel>) => Map<string, ICityModel>;\ntype CitiesOperation = (city: string[]) => string[];\n\nconst initialCities: string[] = [\"Zagreb\", \"Split\", \"Rijeka\", \"Osijek\"];\n\n@Injectable()\nexport class WeatherService {\n    cities$: Observable<string[]>;\n\n    updateCities$: BehaviorSubject<CitiesOperation> = new BehaviorSubject<CitiesOperation>((city: string[]) => city);\n\n    getCity$: Subject<string> = new Subject();\n\n    citiesWeather$: Observable<Map<string, ICityModel>>;\n\n    updateCitiesWeather$: BehaviorSubject<CitiesWeatherOperation> = new BehaviorSubject<CitiesWeatherOperation>((cities) => cities);\n\n    addCityWeather$: Subject<ICityModel> = new Subject();\n\n\n    constructor(private openWeatherProvider: OpenWeatherProvider) {\n\n        this.cities$ = this.updateCities$.pipe(\n            scan((cities: string[], operation: CitiesOperation) => operation(cities), initialCities),\n            publishReplay(1),\n            refCount()\n        );\n\n        this.getCity$.pipe(\n            map((city: string) => (cities: string[]) => cities.concat(city))\n        ).subscribe(this.updateCities$);\n\n        this.citiesWeather$ = this.updateCitiesWeather$.pipe(\n            scan((cities: Map<string, ICityModel>, operation: CitiesWeatherOperation) => operation(cities), new Map()),\n            publishReplay(1),\n            refCount()\n        );\n\n        this.addCityWeather$.pipe(\n            map((city: ICityModel) => {\n                return (cities: Map<string, ICityModel>) => {\n                    if (!cities.has(city.cityDetails.name)) {\n                        cities.set(city.cityDetails.name.toLowerCase(), city);\n                    }\n                    return cities;\n                }\n            })\n        ).subscribe(this.updateCitiesWeather$)\n    }\n\n    public addCityWeather(cityName: string): void {\n        this.openWeatherProvider.getFullWeatherByCityName(cityName)\n            .subscribe((cityWeather: ICityModel) => this.addCityWeather$.next(cityWeather));\n    }\n\n    public getCity(): void {\n\n    }\n}\n","export { AppServerModule } from './app/app.server.module';\n","module.exports = require(\"@angular/animations\");","module.exports = require(\"@angular/animations/browser\");","module.exports = require(\"@angular/common\");","module.exports = require(\"@angular/common/http\");","module.exports = require(\"@angular/core\");","module.exports = require(\"@angular/forms\");","module.exports = require(\"@angular/http\");","module.exports = require(\"@angular/platform-browser\");","module.exports = require(\"@angular/platform-browser/animations\");","module.exports = require(\"@angular/platform-server\");","module.exports = require(\"@angular/router\");","module.exports = require(\"@nguniversal/module-map-ngfactory-loader\");","module.exports = require(\"rxjs\");","module.exports = require(\"rxjs/\");","module.exports = require(\"rxjs/operators\");"],"sourceRoot":""}